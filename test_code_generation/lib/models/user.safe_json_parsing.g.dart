// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'user.dart';

// **************************************************************************
// SafeJsonParsingGenerator
// **************************************************************************

// Enhanced JSON parsing extension for User
extension UserSafeJsonParsing on User {
  /// Enhanced JSON parsing with detailed error messages
  ///
  /// This method provides crystal-clear error messages when JSON parsing fails,
  /// including the exact field that caused the error, expected vs actual types,
  /// and copy-paste ready solutions to fix the issue.
  ///
  /// Generated by @SafeJsonParsing annotation
  static User fromJsonSafe(Map<String, dynamic> json) {
    return User(
      id: json.getSafeInt('id'),
      name: json.getSafeString('name'),
      email: json.getSafeString('email'),
      age: json.getNullableSafeInt('age'),
      isActive: json.getSafeBool('isActive'),
      createdAt: json.getSafeDateTime('createdAt'),
      tags: json.getSafeList('tags', (v) => v as String),
    );
  }
}

// Enhanced JSON parsing extension for Product
extension ProductSafeJsonParsing on Product {
  /// Enhanced JSON parsing with detailed error messages
  ///
  /// This method provides crystal-clear error messages when JSON parsing fails,
  /// including the exact field that caused the error, expected vs actual types,
  /// and copy-paste ready solutions to fix the issue.
  ///
  /// Generated by @SafeJsonParsing annotation
  static Product parseJsonSafe(Map<String, dynamic> json) {
    json.requireKeys(['id', 'name', 'price', 'is_available']);

    return Product(
      id: json.getSafeString('id'),
      name: json.getSafeWithContext('name', (v) => v as String,
          fieldDescription: 'Product name', expectedFormat: 'Non-empty string'),
      price: json.getSafeWithContext('price', (v) => (v as num).toDouble(),
          fieldDescription: 'Product price in USD',
          expectedFormat: 'Positive number (e.g., 19.99)',
          commonValues: ['9.99', '19.99', '29.99']),
      isAvailable: json.getSafeWithContext('is_available', (v) => v as bool,
          fieldDescription: 'Product availability status',
          commonValues: ['true', 'false']),
      tags: json.getNullableSafeList('tags', (v) => v as String),
    );
  }
}
