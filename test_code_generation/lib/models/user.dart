import 'package:json_annotation/json_annotation.dart';
import 'package:json_annotation_tools/json_annotation_tools.dart';

part 'user.g.dart';
part 'user.safe_json_parsing.g.dart';

/// ðŸš€ TESTING @SafeJsonParsing() CODE GENERATION!
/// This will auto-generate fromJsonSafe() method
@JsonSerializable()
@SafeJsonParsing()
class User {
  final int id;
  final String name;
  final String email;
  final int? age;
  final bool isActive;
  final DateTime createdAt;
  final List<String> tags;

  User({
    required this.id,
    required this.name,
    required this.email,
    this.age,
    required this.isActive,
    required this.createdAt,
    required this.tags,
  });

  // Standard json_serializable methods
  factory User.fromJson(Map<String, dynamic> json) => _$UserFromJson(json);
  Map<String, dynamic> toJson() => _$UserToJson(this);

  // ðŸš€ THIS SHOULD BE AUTO-GENERATED by @SafeJsonParsing():
  // static User fromJsonSafe(Map<String, dynamic> json) => ...
}

/// Test model with enhanced field annotations  
@JsonSerializable()
@SafeJsonParsing(
  nullSafety: true,
  validateRequiredKeys: true,
  methodName: 'parseJsonSafe',
)
class Product {
  final String id;
  
  @SafeJsonField(
    description: 'Product name',
    expectedFormat: 'Non-empty string',
  )
  final String name;
  
  @SafeJsonField(
    description: 'Product price in USD',
    expectedFormat: 'Positive number (e.g., 19.99)',
    commonValues: ['9.99', '19.99', '29.99'],
  )
  final double price;
  
  @JsonKey(name: 'is_available')
  @SafeJsonField(
    description: 'Product availability status',
    commonValues: ['true', 'false'],
  )
  final bool isAvailable;
  
  final List<String>? tags;

  Product({
    required this.id,
    required this.name,
    required this.price,
    required this.isAvailable,
    this.tags,
  });

  factory Product.fromJson(Map<String, dynamic> json) => _$ProductFromJson(json);
  Map<String, dynamic> toJson() => _$ProductToJson(this);

  // ðŸš€ THIS SHOULD BE AUTO-GENERATED as: Product.parseJsonSafe()
}
