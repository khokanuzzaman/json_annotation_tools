import 'package:json_annotation/json_annotation.dart';
import 'package:json_annotation_tools/json_annotation_tools.dart';

part 'api_models.g.dart';
part 'api_models.safe_json_parsing.g.dart';

/// ðŸš€ DEMO: User model with @SafeJsonParsing() code generation!
/// 
/// This showcases the revolutionary @SafeJsonParsing() annotation that
/// automatically generates crystal-clear error messages for JSON parsing.
@JsonSerializable()
@SafeJsonParsing()
class User {
  final int id;
  final String name;
  final String email;
  final int? age;
  final bool isActive;
  final DateTime createdAt;
  final List<String> tags;

  User({
    required this.id,
    required this.name,
    required this.email,
    this.age,
    required this.isActive,
    required this.createdAt,
    required this.tags,
  });

  /// Standard json_serializable method
  factory User.fromJson(Map<String, dynamic> json) => _$UserFromJson(json);
  
  /// Standard json_serializable method
  Map<String, dynamic> toJson() => _$UserToJson(this);
  
  /// ðŸŽ¯ AUTO-GENERATED: UserSafeJsonParsing.fromJsonSafe() 
  /// This method is automatically generated by @SafeJsonParsing()
  /// and provides enhanced error messages!
  static User fromJsonSafeExample(Map<String, dynamic> json) {
    // This will be replaced by the auto-generated method
    return UserSafeJsonParsing.fromJsonSafe(json);
  }

  @override
  String toString() {
    return 'User(id: $id, name: $name, email: $email, age: $age, isActive: $isActive, tags: $tags)';
  }
}

/// ðŸŽ¯ DEMO: Product model with enhanced @SafeJsonField() annotations!
/// 
/// This showcases field-level customization with detailed descriptions
/// and expected formats for even better error messages.
@JsonSerializable()
@SafeJsonParsing(
  nullSafety: true,
  validateRequiredKeys: true,
  methodName: 'parseJsonSafe',
)
class Product {
  final String id;
  
  @SafeJsonField(
    description: 'Product display name',
    expectedFormat: 'Non-empty string (e.g., "iPhone 15")',
  )
  final String name;
  
  @SafeJsonField(
    description: 'Product price in USD',
    expectedFormat: 'Positive decimal number (e.g., 999.99)',
    commonValues: ['9.99', '19.99', '99.99', '999.99'],
  )
  final double price;
  
  @JsonKey(name: 'is_available')
  @SafeJsonField(
    description: 'Product availability status',
    expectedFormat: 'Boolean true/false',
    commonValues: ['true', 'false'],
  )
  final bool isAvailable;
  
  @SafeJsonField(
    description: 'Product categories/tags',
    expectedFormat: 'Array of strings (e.g., ["electronics", "mobile"])',
  )
  final List<String>? categories;

  Product({
    required this.id,
    required this.name,
    required this.price,
    required this.isAvailable,
    this.categories,
  });

  /// Standard json_serializable methods
  factory Product.fromJson(Map<String, dynamic> json) => _$ProductFromJson(json);
  Map<String, dynamic> toJson() => _$ProductToJson(this);

  /// ðŸŽ¯ AUTO-GENERATED: ProductSafeJsonParsing.parseJsonSafe()
  /// This method is automatically generated with custom method name!
  static Product parseJsonSafeExample(Map<String, dynamic> json) {
    // This will be replaced by the auto-generated method
    return ProductSafeJsonParsing.parseJsonSafe(json);
  }

  @override
  String toString() {
    return 'Product(id: $id, name: $name, price: \$${price.toStringAsFixed(2)}, isAvailable: $isAvailable, categories: $categories)';
  }
}

/// ðŸ”¥ DEMO: API Response model for real-world scenarios
/// 
/// This demonstrates handling complex nested JSON responses
/// that are common in REST APIs.
@JsonSerializable()
@SafeJsonParsing(nullSafety: true)
class ApiResponse {
  final bool success;
  final String message;
  final User? user;
  final List<Product> products;
  final Map<String, dynamic> metadata;

  ApiResponse({
    required this.success,
    required this.message,
    this.user,
    required this.products,
    required this.metadata,
  });

  factory ApiResponse.fromJson(Map<String, dynamic> json) => _$ApiResponseFromJson(json);
  Map<String, dynamic> toJson() => _$ApiResponseToJson(this);

  @override
  String toString() {
    return 'ApiResponse(success: $success, message: $message, user: $user, products: ${products.length} items)';
  }
}
