// GENERATED CODE - DO NOT MODIFY BY HAND
// dart format width=80

part of 'api_models.dart';

// **************************************************************************
// SafeJsonParsingGenerator
// **************************************************************************

// Enhanced JSON parsing extension for User
extension UserSafeJsonParsing on User {
  /// Enhanced JSON parsing with detailed error messages
  ///
  /// This method provides crystal-clear error messages when JSON parsing fails,
  /// including the exact field that caused the error, expected vs actual types,
  /// and copy-paste ready solutions to fix the issue.
  ///
  /// Generated by @SafeJsonParsing annotation
  static User fromJsonSafe(Map<String, dynamic> json) {
    return User(
      id: json.getSafeInt('id'),
      name: json.getSafeString('name'),
      email: json.getSafeString('email'),
      age: json.getNullableSafeInt('age'),
      isActive: json.getSafeBool('isActive'),
      createdAt: json.getSafeDateTime('createdAt'),
      tags: json.getSafeList('tags', (v) => v as String),
    );
  }
}

// Enhanced JSON parsing extension for Product
extension ProductSafeJsonParsing on Product {
  /// Enhanced JSON parsing with detailed error messages
  ///
  /// This method provides crystal-clear error messages when JSON parsing fails,
  /// including the exact field that caused the error, expected vs actual types,
  /// and copy-paste ready solutions to fix the issue.
  ///
  /// Generated by @SafeJsonParsing annotation
  static Product parseJsonSafe(Map<String, dynamic> json) {
    json.requireKeys(['id', 'name', 'price', 'isAvailable']);

    return Product(
      id: json.getSafeString('id'),
      name: json.getSafeString('name'),
      price: json.getSafeDouble('price'),
      isAvailable: json.getSafeBool('isAvailable'),
      categories: json.getNullableSafeList('categories', (v) => v as String),
    );
  }
}

// Enhanced JSON parsing extension for ApiResponse
extension ApiResponseSafeJsonParsing on ApiResponse {
  /// Enhanced JSON parsing with detailed error messages
  ///
  /// This method provides crystal-clear error messages when JSON parsing fails,
  /// including the exact field that caused the error, expected vs actual types,
  /// and copy-paste ready solutions to fix the issue.
  ///
  /// Generated by @SafeJsonParsing annotation
  static ApiResponse fromJsonSafe(Map<String, dynamic> json) {
    return ApiResponse(
      success: json.getSafeBool('success'),
      message: json.getSafeString('message'),
      user: json.getNullableSafeObject(
        'user',
        (json) =>
            UserSafeJsonParsing.fromJsonSafe(json as Map<String, dynamic>),
      ),
      products: json.getSafeList('products', (v) => v as Product),
      metadata: json.getSafe('metadata', (v) => v as Map<String, dynamic>),
    );
  }
}
